name: Build and Deploy to EC2
on:
  push:
    branches: [devops]

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    environment: ENV_FILES
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ secrets.GHCR_USERNAME }}
          password: ${{ secrets.GHCR_TOKEN }}
      
      - name: Build and push backend image
        run: |
          docker build -t ghcr.io/${{ secrets.GHCR_USERNAME }}/ats-mono-repo-backend:latest ./backend
          docker push ghcr.io/${{ secrets.GHCR_USERNAME }}/ats-mono-repo-backend:latest
      
      - name: Build and push frontend image
        run: |
          docker build -t ghcr.io/${{ secrets.GHCR_USERNAME }}/ats-mono-repo-frontend:latest ./frontend
          docker push ghcr.io/${{ secrets.GHCR_USERNAME }}/ats-mono-repo-frontend:latest

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    environment: ENV_FILES
    steps:
      - name: Deploy to EC2
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            # Create env file
            echo "${{ secrets.ENV_FILES }}" > /home/ubuntu/backend.env
            
            # Login to GitHub Container Registry
            echo "${{ secrets.GHCR_TOKEN }}" | docker login ghcr.io -u "${{ secrets.GHCR_USERNAME }}" --password-stdin
            
            # Pull latest images
            docker pull ghcr.io/${{ secrets.GHCR_USERNAME }}/ats-mono-repo-backend:latest
            docker pull ghcr.io/${{ secrets.GHCR_USERNAME }}/ats-mono-repo-frontend:latest
            
            # Stop and remove existing containers
            docker stop backend || true
            docker rm backend || true
            docker stop frontend || true
            docker rm frontend || true
            
            # Run new containers
            docker run -d --name backend --env-file /home/ubuntu/backend.env -p 5000:5000 ghcr.io/${{ secrets.GHCR_USERNAME }}/ats-mono-repo-backend:latest
            docker run -d --name frontend -p 80:3000 ghcr.io/${{ secrets.GHCR_USERNAME }}/ats-mono-repo-frontend:latest
            
            # Clean up old images
            docker image prune -f
