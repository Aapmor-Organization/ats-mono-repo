name: Build and Deploy to EC2

on:
  push:
    branches: [devops]

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ secrets.GHCR_USERNAME }}
          password: ${{ secrets.GHCR_TOKEN }}

      - name: Build and push backend image
        run: |
          docker build -t ghcr.io/${{ secrets.GHCR_USERNAME }}/ats-mono-repo-backend:latest ./backend
          docker push ghcr.io/${{ secrets.GHCR_USERNAME }}/ats-mono-repo-backend:latest

      - name: Build and push frontend image
        run: |
          docker build -t ghcr.io/${{ secrets.GHCR_USERNAME }}/ats-mono-repo-frontend:latest ./frontend
          docker push ghcr.io/${{ secrets.GHCR_USERNAME }}/ats-mono-repo-frontend:latest

deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    steps:
      - name: Install SSH key
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Deploy on EC2
        env:
          GHCR_USERNAME: ${{ secrets.GHCR_USERNAME }}
          GHCR_TOKEN: ${{ secrets.GHCR_TOKEN }}
          ENV_FILES: ${{ secrets.ENV_FILES }}
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} << 'EOF'
            # Write backend .env file from secret
            echo "$ENV_FILES" > /home/ubuntu/backend.env

            # Login to GHCR
            docker login ghcr.io -u $GHCR_USERNAME -p $GHCR_TOKEN

            # Pull latest images
            docker pull ghcr.io/$GHCR_USERNAME/ats-mono-repo-backend:latest
            docker pull ghcr.io/$GHCR_USERNAME/ats-mono-repo-frontend:latest

            # Stop and remove old containers if they exist
            docker stop backend || true && docker rm backend || true
            docker stop frontend || true && docker rm frontend || true

            # Run backend
            docker run -d --name backend --env-file /home/ubuntu/backend.env -p 5000:5000 ghcr.io/$GHCR_USERNAME/ats-mono-repo-backend:latest

            # Run frontend
            docker run -d --name frontend -p 80:3000 ghcr.io/$GHCR_USERNAME/ats-mono-repo-frontend:latest
          EOF 
